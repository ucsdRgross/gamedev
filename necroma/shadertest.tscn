[gd_scene load_steps=7 format=2]

[ext_resource path="res://art/BIGwizard.png" type="Texture" id=1]
[ext_resource path="res://art/wizard.png" type="Texture" id=2]
[ext_resource path="res://watercolor.gdshader" type="Shader" id=3]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 3 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float strength: hint_range(0.0, 0.1, 0.001) = 0.08;
uniform vec2 center = vec2(0.5, 0.5);
uniform float radius: hint_range(0.0, 1.0, 0.001) = 0.25;


uniform float aberration: hint_range(0.0, 1.0, 0.001) = 0.425;
uniform float width: hint_range(0.0, 0.1, 0.0001) = 0.04;
uniform float feather: hint_range(0.0, 1.0, 0.001) = 0.135;

void fragment() {
	vec2 st = UV;
	float aspect_ratio = TEXTURE_PIXEL_SIZE.y/TEXTURE_PIXEL_SIZE.x;
	vec2 scaled_st = (st -vec2(0.0, 0.5)) / vec2(1.0, aspect_ratio) + vec2(0,0.5); 
	vec2 dist_center = scaled_st - center;
	float mask =  (1.0 - smoothstep(radius-feather, radius, length(dist_center))) * smoothstep(radius - width - feather, radius-width , length(dist_center));
	vec2 offset = normalize(dist_center)*strength*mask;
	vec2 biased_st = scaled_st - offset;
	
	vec2 abber_vec = offset*aberration*mask;
	
	vec2 final_st = st*(1.0-mask) + biased_st*mask;

	vec4 red = texture(TEXTURE, final_st + abber_vec);
	vec4 blue = texture(TEXTURE, final_st - abber_vec);
	vec4 ori = texture(TEXTURE, final_st);
	COLOR = vec4(red.r, ori.g, blue.b, 1.0);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/strength = 0.08
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/radius = 0.25
shader_param/aberration = 0.425
shader_param/width = 0.04
shader_param/feather = 0.135

[node name="Node2D" type="Node2D"]

[node name="BiGwizard" type="Sprite" parent="."]
material = SubResource( 2 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 1 )

[node name="Wizard" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 32, 0 )
texture = ExtResource( 2 )
